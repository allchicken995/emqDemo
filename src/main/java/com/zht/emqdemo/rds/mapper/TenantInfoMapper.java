package com.zht.emqdemo.rds.mapper;

import com.zht.emqdemo.rds.model.TenantInfo;
import com.zht.emqdemo.rds.model.TenantInfoCriteria;
import java.util.List;

import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

@Mapper
public interface TenantInfoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tenant_info
     *
     * @mbg.generated
     */
    @SelectProvider(type=TenantInfoSqlProvider.class, method="countByExample")
    long countByExample(TenantInfoCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tenant_info
     *
     * @mbg.generated
     */
    @DeleteProvider(type=TenantInfoSqlProvider.class, method="deleteByExample")
    int deleteByExample(TenantInfoCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tenant_info
     *
     * @mbg.generated
     */
    @Delete({
        "delete from tenant_info",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tenant_info
     *
     * @mbg.generated
     */
    @Insert({
        "insert into tenant_info (account, password)",
        "values (#{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR})"
    })
    @Options(useGeneratedKeys=true,keyProperty="id")
    int insert(TenantInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tenant_info
     *
     * @mbg.generated
     */
    @InsertProvider(type=TenantInfoSqlProvider.class, method="insertSelective")
    @Options(useGeneratedKeys=true,keyProperty="id")
    int insertSelective(TenantInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tenant_info
     *
     * @mbg.generated
     */
    @SelectProvider(type=TenantInfoSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="account", property="account", jdbcType=JdbcType.VARCHAR),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR)
    })
    List<TenantInfo> selectByExample(TenantInfoCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tenant_info
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, account, password",
        "from tenant_info",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="account", property="account", jdbcType=JdbcType.VARCHAR),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR)
    })
    TenantInfo selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tenant_info
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TenantInfoSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") TenantInfo record, @Param("example") TenantInfoCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tenant_info
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TenantInfoSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") TenantInfo record, @Param("example") TenantInfoCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tenant_info
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TenantInfoSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(TenantInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tenant_info
     *
     * @mbg.generated
     */
    @Update({
        "update tenant_info",
        "set account = #{account,jdbcType=VARCHAR},",
          "password = #{password,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(TenantInfo record);
}