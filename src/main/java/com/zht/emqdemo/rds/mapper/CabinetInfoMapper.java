package com.zht.emqdemo.rds.mapper;

import com.zht.emqdemo.rds.model.CabinetInfo;
import com.zht.emqdemo.rds.model.CabinetInfoCriteria;
import java.util.List;

import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

@Mapper
public interface CabinetInfoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cabinet_info
     *
     * @mbg.generated
     */
    @SelectProvider(type=CabinetInfoSqlProvider.class, method="countByExample")
    long countByExample(CabinetInfoCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cabinet_info
     *
     * @mbg.generated
     */
    @DeleteProvider(type=CabinetInfoSqlProvider.class, method="deleteByExample")
    int deleteByExample(CabinetInfoCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cabinet_info
     *
     * @mbg.generated
     */
    @Delete({
        "delete from cabinet_info",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cabinet_info
     *
     * @mbg.generated
     */
    @Insert({
        "insert into cabinet_info (id,status, power_one, ",
        "power_two, power_three, ",
        "power_four, temperature_one, ",
        "temperature_two, temperature_three, ",
        "temperature_four, value_one, ",
        "value_two, tenant_id, ",
        "alarm_value_one, alarm_value_two)",
        "values (#{id,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{powerOne,jdbcType=INTEGER}, ",
        "#{powerTwo,jdbcType=INTEGER}, #{powerThree,jdbcType=INTEGER}, ",
        "#{powerFour,jdbcType=INTEGER}, #{temperatureOne,jdbcType=DECIMAL}, ",
        "#{temperatureTwo,jdbcType=DECIMAL}, #{temperatureThree,jdbcType=DECIMAL}, ",
        "#{temperatureFour,jdbcType=DECIMAL}, #{valueOne,jdbcType=INTEGER}, ",
        "#{valueTwo,jdbcType=INTEGER}, #{tenantId,jdbcType=VARCHAR}, ",
        "#{alarmValueOne,jdbcType=INTEGER}, #{alarmValueTwo,jdbcType=INTEGER})"
    })
    @Options(useGeneratedKeys=true,keyProperty="id")
    int insert(CabinetInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cabinet_info
     *
     * @mbg.generated
     */
    @InsertProvider(type=CabinetInfoSqlProvider.class, method="insertSelective")
    @Options(useGeneratedKeys=true,keyProperty="id")
    int insertSelective(CabinetInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cabinet_info
     *
     * @mbg.generated
     */
    @SelectProvider(type=CabinetInfoSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER),
        @Result(column="power_one", property="powerOne", jdbcType=JdbcType.INTEGER),
        @Result(column="power_two", property="powerTwo", jdbcType=JdbcType.INTEGER),
        @Result(column="power_three", property="powerThree", jdbcType=JdbcType.INTEGER),
        @Result(column="power_four", property="powerFour", jdbcType=JdbcType.INTEGER),
        @Result(column="temperature_one", property="temperatureOne", jdbcType=JdbcType.DECIMAL),
        @Result(column="temperature_two", property="temperatureTwo", jdbcType=JdbcType.DECIMAL),
        @Result(column="temperature_three", property="temperatureThree", jdbcType=JdbcType.DECIMAL),
        @Result(column="temperature_four", property="temperatureFour", jdbcType=JdbcType.DECIMAL),
        @Result(column="value_one", property="valueOne", jdbcType=JdbcType.INTEGER),
        @Result(column="value_two", property="valueTwo", jdbcType=JdbcType.INTEGER),
        @Result(column="tenant_id", property="tenantId", jdbcType=JdbcType.VARCHAR),
        @Result(column="alarm_value_one", property="alarmValueOne", jdbcType=JdbcType.INTEGER),
        @Result(column="alarm_value_two", property="alarmValueTwo", jdbcType=JdbcType.INTEGER)
    })
    List<CabinetInfo> selectByExample(CabinetInfoCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cabinet_info
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, status, power_one, power_two, power_three, power_four, temperature_one, ",
        "temperature_two, temperature_three, temperature_four, value_one, value_two, ",
        "tenant_id, alarm_value_one, alarm_value_two",
        "from cabinet_info",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER),
        @Result(column="power_one", property="powerOne", jdbcType=JdbcType.INTEGER),
        @Result(column="power_two", property="powerTwo", jdbcType=JdbcType.INTEGER),
        @Result(column="power_three", property="powerThree", jdbcType=JdbcType.INTEGER),
        @Result(column="power_four", property="powerFour", jdbcType=JdbcType.INTEGER),
        @Result(column="temperature_one", property="temperatureOne", jdbcType=JdbcType.DECIMAL),
        @Result(column="temperature_two", property="temperatureTwo", jdbcType=JdbcType.DECIMAL),
        @Result(column="temperature_three", property="temperatureThree", jdbcType=JdbcType.DECIMAL),
        @Result(column="temperature_four", property="temperatureFour", jdbcType=JdbcType.DECIMAL),
        @Result(column="value_one", property="valueOne", jdbcType=JdbcType.INTEGER),
        @Result(column="value_two", property="valueTwo", jdbcType=JdbcType.INTEGER),
        @Result(column="tenant_id", property="tenantId", jdbcType=JdbcType.VARCHAR),
        @Result(column="alarm_value_one", property="alarmValueOne", jdbcType=JdbcType.INTEGER),
        @Result(column="alarm_value_two", property="alarmValueTwo", jdbcType=JdbcType.INTEGER)
    })
    CabinetInfo selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cabinet_info
     *
     * @mbg.generated
     */
    @UpdateProvider(type=CabinetInfoSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") CabinetInfo record, @Param("example") CabinetInfoCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cabinet_info
     *
     * @mbg.generated
     */
    @UpdateProvider(type=CabinetInfoSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") CabinetInfo record, @Param("example") CabinetInfoCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cabinet_info
     *
     * @mbg.generated
     */
    @UpdateProvider(type=CabinetInfoSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(CabinetInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cabinet_info
     *
     * @mbg.generated
     */
    @Update({
        "update cabinet_info",
        "set status = #{status,jdbcType=INTEGER},",
          "power_one = #{powerOne,jdbcType=INTEGER},",
          "power_two = #{powerTwo,jdbcType=INTEGER},",
          "power_three = #{powerThree,jdbcType=INTEGER},",
          "power_four = #{powerFour,jdbcType=INTEGER},",
          "temperature_one = #{temperatureOne,jdbcType=DECIMAL},",
          "temperature_two = #{temperatureTwo,jdbcType=DECIMAL},",
          "temperature_three = #{temperatureThree,jdbcType=DECIMAL},",
          "temperature_four = #{temperatureFour,jdbcType=DECIMAL},",
          "value_one = #{valueOne,jdbcType=INTEGER},",
          "value_two = #{valueTwo,jdbcType=INTEGER},",
          "tenant_id = #{tenantId,jdbcType=VARCHAR},",
          "alarm_value_one = #{alarmValueOne,jdbcType=INTEGER},",
          "alarm_value_two = #{alarmValueTwo,jdbcType=INTEGER}",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(CabinetInfo record);
}